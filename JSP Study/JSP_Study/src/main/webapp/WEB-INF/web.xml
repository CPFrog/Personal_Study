<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns="http://xmlns.jcp.org/xml/ns/javaee"
	xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_3_1.xsd"
	id="WebApp_ID" version="3.1">
	<display-name>JSP_Study</display-name>
	<!-- ServletContext 객체가 웹 앱 단위로 사용할 수 있는 변수가 되기 위해 추가한 코드 -->
	<context-param>
		<param-name>contextConfig</param-name>
		<param-value>/WEB-INF/context.xml</param-value>
	</context-param>
	<!-- 웹 앱 단위 ServletContext 변수 코드 끝 -->
	<servlet>
		<servlet-name>first</servlet-name>
		<servlet-class>com.edu.study.FirstServlet</servlet-class>
	</servlet>
	<servlet>
		<servlet-name>AdditionalInfo</servlet-name>
		<servlet-class>com.edu.study.AdditionalInfoServlet_xml</servlet-class>
	</servlet>

	<servlet-mapping>
		<servlet-name>first</servlet-name>
		<url-pattern>/hello</url-pattern>
	</servlet-mapping>
	<servlet-mapping>
		<servlet-name>AdditionalInfo</servlet-name>
		<url-pattern>/moreinfo_xml/*</url-pattern> <!-- /*이 들어감으로써 뒤에 어떤 문자가 오던지간에 AdditionalInfo 서블릿 실행됨. -->
	</servlet-mapping>

	<servlet>
		<servlet-name>initParam</servlet-name>
		<servlet-class>com.edu.study.InitParamServlet</servlet-class>
		<init-param>
			<param-name>id</param-name>
			<param-value>guest</param-value>
		</init-param>
		<init-param>
			<param-name>password</param-name>
			<param-value>1004</param-value>
		</init-param>
		<load-on-startup>1</load-on-startup>
	</servlet>

	<servlet-mapping>
		<servlet-name>initParam</servlet-name>
		<url-pattern>/initParamTest</url-pattern>
	</servlet-mapping>

	<servlet>
		<servlet-name>ServletConfigTest</servlet-name>
		<servlet-class>com.edu.study.ServletConfigTestServlet</servlet-class>
		<init-param>
			<param-name>charset</param-name>
			<param-value>UTF-8</param-value>
		</init-param>
	</servlet>

	<servlet-mapping>
		<servlet-name>ServletConfigTest</servlet-name>
		<url-pattern>/ServletConfigTest</url-pattern>
	</servlet-mapping>

	<filter>
		<filter-name>flow1</filter-name>
		<filter-class>com.edu.chapter7.FlowFilterOne</filter-class>
	</filter>

	<filter>
		<filter-name>flow2</filter-name>
		<filter-class>com.edu.chapter7.FlowFilterTwo</filter-class>
		<init-param>
			<param-name>en</param-name>
			<param-value>UTF-8</param-value>
		</init-param>
	</filter>
	
	<filter-mapping>
		<filter-name>flow1</filter-name>
		<url-pattern>/chap7_second</url-pattern>
	</filter-mapping>
	
	<filter-mapping>
		<filter-name>flow2</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>
	
	<!-- annotation으로 실행 가능해서 주석 처리.
	<listener>
		<listener-class>com.edu.chapter7.TestServletContextListener</listener-class>
	</listener>
	 -->
	<!-- 
	<listener>
		<listener-class>com.edu.chapter7.TestSessionListener</listener-class>
	</listener>
	<listener>
		<listener-class>com.edu.chapter7.TestSessionAttributeListener</listener-class>
	</listener>

	<listener>
		<listener-class>com.edu.chapter7.TestRequestListener</listener-class>
	</listener>
	-->
	
	<!-- DataSource 객체를 이용해 DB 작업을 하기 위한 설정 -->
	<resource-ref>
		<description>Oracle Datasource example</description>
		<res-ref-name>jdbc/myoracle</res-ref-name>
		<res-type>javax.sql.Datasource</res-type>
		<res-auth>Container</res-auth>
	</resource-ref>
	
	<error-page>
		<error-code>405</error-code>
		<location>/errorHandle</location>
	</error-page>
	
	<error-page>
		<exception-type>java.lang.NullPointerException</exception-type>
		<location>/errorHandle</location>
	</error-page>
</web-app>